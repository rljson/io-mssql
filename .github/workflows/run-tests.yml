# This workflow will do a clean installation of node dependencies,
# cache/restore them, build the source code and run tests across different
# versions of node

name: Tests

on:
  workflow_dispatch:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]
    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: Password123!
          MSSQL_PID: Developer
        ports:
          - 1431:1433
    steps:
    
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install sqlcmd
        run: |
          sudo apt-get update
          sudo apt-get install -y mssql-tools unixodbc-dev
          echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
          source ~/.bashrc
      
      - name: Wait for MSSQL to be ready
        run: |
          echo "Waiting for MSSQL to start..."
          for i in {1..30}; do
            /opt/mssql-tools/bin/sqlcmd -S localhost,1431 -U sa -P 'Password123!' -Q "SELECT 1" && break
            echo "MSSQL not ready yet... ($i)"
            sleep 2
          done      

      - name: Test MSSQL connection
        run: |
          echo "Testing MSSQL connection..."
          # Optional: install sqlcmd and test connection
      # Corepack aktivieren, um sicherzustellen, dass pnpm funktioniert
      - name: Enable Corepack
        run: corepack enable

      - name: Setup pnpm
        uses: pnpm/action-setup@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Cache pnpm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - run: pnpm install --frozen-lockfile

      - run: pnpm build
      - run: pnpm test
