# This workflow will do a clean installation of node dependencies,
# cache/restore them, build the source code and run tests across different
# versions of node

name: Tests

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
  # workflow_run:
  #   workflows: ['setup-sql-server']
  #   types: [completed]
  # branches: [main]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    env:
      DB_HOST: localhost
      DB_PORT: 1431
      DB_USER: sa
      DB_PASSWORD: Password123!
      DB_NAME: master

    # new approach to mssql server
    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          SA_PASSWORD: 'Password123!'
          ACCEPT_EULA: 'Y'
        ports:
          - 1433:1431
        options: >-
          --health-cmd="exit 0"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    # end new approach to mssql server
    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # - name: Install SQL Server tools
      #   run: |
      #     curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
      #     curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/msprod.list
      #     sudo apt-get update
      #     sudo ACCEPT_EULA=Y apt-get install -y mssql-tools unixodbc-dev
      #     echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
      #     source ~/.bashrc

      # - name: Wait for MSSQL to be ready
      #   run: |
      #     for i in {1..30}; do
      #       /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P "0I2tV9(F0V$+Hv@G" -Q "SELECT 1" && break
      #       sleep 1
      #     done
      - uses: actions/checkout@v4
      # Corepack aktivieren, um sicherzustellen, dass pnpm funktioniert
      - name: Enable Corepack
        run: corepack enable

      - name: Setup pnpm
        uses: pnpm/action-setup@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Cache pnpm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - run: pnpm install --frozen-lockfile
      # currently
      # - run: pnpm build
      # - run: pnpm test
