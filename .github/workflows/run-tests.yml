# This workflow will do a clean installation of node dependencies,
# cache/restore them, build the source code and run tests across different
# versions of node

name: Tests

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
  # workflow_run:
  #   workflows: ['setup-sql-server']
  #   types: [completed]
  # branches: [main]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    # credentials for mssql server
    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Podman
        run: |
          sudo apt-get update
          sudo apt-get install -y podman

      - name: Start MSSQL container
        run: |
          podman pull mcr.microsoft.com/mssql/server:2022-latest
          podman run -d \
            --name mssql \
            -e "ACCEPT_EULA=Y" \
            -e "SA_PASSWORD=Password123!" \
            -p 1433:1431 \
            mcr.microsoft.com/mssql/server:2022-latest
          sleep 30

      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | podman login ghcr.io -u ${{ github.actor }} --password-stdin

      # Corepack aktivieren, um sicherzustellen, dass pnpm funktioniert
      - name: Enable Corepack
        run: corepack enable

      - name: Setup pnpm
        uses: pnpm/action-setup@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Cache pnpm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - run: pnpm install --frozen-lockfile
      # currently
      - run: pnpm build
      - run: pnpm test

      - name: Build image with Podman
        run: podman build -t ghcr.io/rljson/io-mssql:latest .

      - name: Login to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | podman login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Push image
        run: podman push ghcr.io/rljson/io-mssql:latest
